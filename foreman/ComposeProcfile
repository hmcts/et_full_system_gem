et1_web:  export godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et1.env bash --login -c "cd ${FS_ROOT_PATH} && cd systems/et1 && bundle exec iodine -port $PORT > /home/app/et1.log"
et3_web:  godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et3.env bash --login -c "cd ${FS_ROOT_PATH} && cd systems/et3 && bundle exec iodine -port $PORT"
api_web: godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et_api.env bash --login -c "cd ${FS_ROOT_PATH} && cd systems/api && bundle exec iodine -port $PORT"
admin_web: godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et_admin.env bash --login -c "cd ${FS_ROOT_PATH} && cd systems/admin && bundle exec iodine -port $PORT"
atos_api_web: godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et_atos.env bash --login -c "cd ${FS_ROOT_PATH} && cd systems/atos && bundle exec iodine -port $PORT"
fake_acas_web: bash --login -c "cd ${FS_ROOT_PATH} && et_fake_acas_server -port $PORT -threads=1 -workers=2"
fake_ccd_web: bash --login -c "cd ${FS_ROOT_PATH} && et_fake_ccd start --port=$PORT --create_case_schema=./systems/et_ccd_export/spec/json_schemas/case_create.json"
fake_notify_web: godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/fake_notify.env bash --login -c "cd ${FS_ROOT_PATH} && gov_fake_notify start --port=$PORT --config=${FOREMAN_PATH}/gov_fake_notify.yaml"
et1_sidekiq: bash --login -c "cd ${FS_ROOT_PATH} && cd systems/et1 && godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et1.env ./run_sidekiq.sh"
api_sidekiq: bash --login -c "cd ${FS_ROOT_PATH} && cd systems/api && godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et_api.env ./run_sidekiq.sh"
et_ccd_export_sidekiq: bash --login -c "cd ${FS_ROOT_PATH} && cd systems/et_ccd_export && godotenv -f ${FOREMAN_PATH}/.env godotenv -f ${FOREMAN_PATH}/et_ccd_export.env ./run_sidekiq.sh"
